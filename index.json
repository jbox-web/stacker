{"repository_name":"stacker","body":"# Stacker - A lightweight file-based CMDB\n\n[![GitHub license](https://img.shields.io/github/license/jbox-web/stacker.svg)](https://github.com/jbox-web/stacker/blob/master/LICENSE)\n[![Build Status](https://github.com/jbox-web/stacker/workflows/Stacker%20CI/badge.svg?branch=master)](https://github.com/jbox-web/stacker/actions)\n\nStacker is [Salt PillarStack](https://docs.saltstack.com/en/master/ref/pillar/all/salt.pillar.stack.html) in [Crystal](https://crystal-lang.org/).\n\nIt is implemented using [crinja](https://github.com/straight-shoota/crinja) which is Jinja2 in Crystal :)\n\n[Documentation](https://jbox-web.github.io/stacker/index.html)\n\n## Installation\n\n### Manual compilation\n\nTo compile under Debian Buster you will need [Crystal](https://crystal-lang.org/install/on_debian/)\n\nThen :\n\n```sh\ngit clone https://github.com/jbox-web/stacker\nmake stacker-release\n```\n\n### Docker\n\nIn this case you will need... Docker.\n\nThen :\n\n```sh\ndocker pull nicoladmin/stacker:nightly\n```\n\n**Note :** The Docker mode comes with a [wrapper script](https://github.com/jbox-web/stacker/blob/master/stacker.sh) to ease interactions with the container\n\nUsage : `stacker.sh {start|stop|restart|status|kill|clean|fetch|logs}`\n\n## The 10 seconds test in Web mode\n\nFirst we need to start Stacker with sample data :\n\n### Manual compilation\n\n```sh\nbin/stacker server --config example/stacker.yml\n```\n\n### Docker\n\n```sh\n./stacker.sh start\n```\n\nThen fetch pillars with Curl :\n\n```sh\ncurl --no-progress-meter -X POST -H \"Content-Type: application/json\" -d @example/grains/server1.curl.json http://127.0.0.1:3000/server1.example.net | jq\n```\n\nYou can also navigate to http://127.0.0.1:3000/server1.example.net to see the generated pillars.\n\n## The 10 seconds test in CLI mode\n\nIn this mode you don't need the webserver to be running :\n\n### Manual compilation\n\n```sh\nbin/stacker fetch server1.example.net --config example/stacker.yml --grains example/grains/server1.json --pillar example/ext_pillar/server1.json | jq\n```\n\n### Docker\n\n```sh\n./stacker.sh fetch server1.example.net --grains grains/server1.json --pillar ext_pillar/server1.json | jq\n```\n\n## Configuration\n\nBy default Stacker looks for it's configuration file in the current directory (`stacker.yml`).\n\nYou can pass an alternative file by using `--config` flag.\n\nThe configuration file is a YAML file looking like this :\n\n```yml\n---\ndoc_root: example/doc_root\nentrypoint: server-pillars\nlog_file: ./log/stacker.log\n\nstacks:\n  default:\n    - example/doc_root/server-pillars/stack1.cfg\n  dev:\n    - example/doc_root/server-pillars/stack1.cfg\n    - example/doc_root/pillars/stack1.cfg\n  prod:\n    - example/doc_root/server-pillars/stack1.cfg\n    - example/doc_root/pillars/stack1.cfg\n    - example/doc_root/server-pillars/stack2.cfg\n\nserver_host: 127.0.0.1\nserver_port: 3000\nserver_environment: development\n```\n\n**Note :** You can use relative or absolute file path.\n\nConfig               | Description\n---------------------|------------\n`doc_root`           | the webserver document root (must be specified). Since pillar are also crinja templates, it means where are the template files?\n`entrypoint`         | the webserver entrypoint (must be specified). The directory in the `doc_root` where we shoud look for `<minion_d>.yml` file\n`log_file`           | the path to the log file\n`stacks`             | a hash of namespaced [stack configuration files](https://docs.saltstack.com/en/master/ref/pillar/all/salt.pillar.stack.html#list-of-config-files) (must be specified)\n`server_host`        | ip address to bind to (default `127.0.0.1`)\n`server_port`        | port to bind to (default `3000`)\n`server_environment` | `development` or `production` (default `production`)\n\n## Salt integration\n\nTo integrate Stacker with Salt you first need to add the [stacker pillar module](/salt/stacker.py) in Salt :\n\n1. Declare extension modules directory in Salt (`/etc/salt/master.conf` or `/etc/salt/master.d/f_defaults.conf`)\n\n```yml\nextension_modules: /data/salt/modules\n```\n\n2. Create `/data/salt/modules/pillar` directory and puts [stacker module](https://github.com/jbox-web/stacker/blob/master/salt/stacker.py) in it\n\n```sh\nmkdir -p /data/salt/modules/pillar\nwget -O /data/salt/modules/pillar/stacker.py https://raw.githubusercontent.com/jbox-web/stacker/master/salt/stacker.py\n```\n\n3. Declare the new ext_pillar module in Salt\n\n```yml\next_pillar:\n  - stacker: http://127.0.0.1:3000\n```\n\nYou can also pass parameters to Stacker module :\n\n```yml\next_pillar:\n  - stacker:\n      host: http://127.0.0.1:3000\n      namespace: 'production'\n      log_level: 'debug'\n```\n\n4. Restart Salt, you're done :)\n\n## Namespaces\n\nUse namespaces by using optional `n=` query parameter :\n\n```sh\ncurl http://127.0.0.1:3000/server1.example.net?n=dev\ncurl http://127.0.0.1:3000/server1.example.net?n=prod\n```\n\nOr with `--namespace` flag when using Stacker CLI.\n\nThe default namespace when query parameter or CLI flag is omited is `default`.\n\n## Output format\n\nSet output format by using optional `f=` query parameter :\n\n```sh\ncurl http://127.0.0.1:3000/server1.example.net?f=json\ncurl http://127.0.0.1:3000/server1.example.net?f=yaml\n```\n\nOr with `--output-format` flag when using Stacker CLI.\n\nThe default output format when query parameter or CLI flag is omited is `json`.\n\nOnly `json` and `yaml` are supported.\n\n## Logs\n\n* log level\n\nThe log level is dynamic. No need to restart the web server :)\n\nSet log level by using optional `l=` query parameter :\n\n```sh\ncurl http://127.0.0.1:3000/server1.example.net?l=debug\ncurl http://127.0.0.1:3000/server1.example.net?l=trace\n```\n\nOr with `--log-level` flag when using Stacker CLI.\n\nThe default log level when query parameter or CLI flag is omited is `info`.\n\nLog levels other than `debug` or `trace` are meaningless.\n\n`trace` level is very verbose as it dumps data before and after merge operations. In this case you might need some filtering, see below...\n\n<details><summary>debug level will render something like this :</summary>\n\n```sh\n2020-10-02T23:18:27.149678Z   INFO - processor: Building stack for: server2.example.net (namespace: prod)\n2020-10-02T23:18:27.149897Z  DEBUG - renderer: Compiled: example/doc_root/server-pillars/stack1.cfg\n2020-10-02T23:18:27.149927Z  DEBUG - processor: Loading: example/doc_root/server-pillars/01-base.yml\n2020-10-02T23:18:27.149936Z  DEBUG - processor: Compiling: example/doc_root/server-pillars/01-base.yml\n2020-10-02T23:18:27.150030Z  DEBUG - renderer: Compiled: example/doc_root/server-pillars/01-base.yml\n2020-10-02T23:18:27.150078Z  DEBUG - processor: Merging: example/doc_root/server-pillars/01-base.yml\n2020-10-02T23:18:27.150099Z  DEBUG - processor: Loading: example/doc_root/server-pillars/server2.example.net.yml\n2020-10-02T23:18:27.150109Z  DEBUG - processor: Compiling: example/doc_root/server-pillars/server2.example.net.yml\n2020-10-02T23:18:27.150190Z  DEBUG - renderer: Compiled: example/doc_root/server-pillars/server2.example.net.yml\n2020-10-02T23:18:27.150263Z  DEBUG - processor: Merging: example/doc_root/server-pillars/server2.example.net.yml\n2020-10-02T23:18:27.150705Z  DEBUG - renderer: Compiled: example/doc_root/pillars/stack1.cfg\n2020-10-02T23:18:27.150775Z  DEBUG - processor: Loading: example/doc_root/pillars/01-base/01-base.yml\n2020-10-02T23:18:27.150784Z  DEBUG - processor: Compiling: example/doc_root/pillars/01-base/01-base.yml\n2020-10-02T23:18:27.150873Z  DEBUG - renderer: Compiled: example/doc_root/pillars/01-base/01-base.yml\n2020-10-02T23:18:27.150932Z  DEBUG - processor: Merging: example/doc_root/pillars/01-base/01-base.yml\n2020-10-02T23:18:27.150942Z  DEBUG - processor: Loading: example/doc_root/pillars/01-base/app1.yml\n2020-10-02T23:18:27.150949Z  DEBUG - processor: Compiling: example/doc_root/pillars/01-base/app1.yml\n2020-10-02T23:18:27.151042Z  DEBUG - renderer: Compiled: example/doc_root/pillars/01-base/app1.yml\n2020-10-02T23:18:27.151091Z  DEBUG - processor: Merging: example/doc_root/pillars/01-base/app1.yml\n2020-10-02T23:18:27.151108Z  DEBUG - processor: Loading: example/doc_root/pillars/01-base/zdump.yml\n2020-10-02T23:18:27.151115Z  DEBUG - processor: Compiling: example/doc_root/pillars/01-base/zdump.yml\n2020-10-02T23:18:27.151208Z  DEBUG - renderer: Compiled: example/doc_root/pillars/01-base/zdump.yml\n2020-10-02T23:18:27.151238Z  DEBUG - processor: Merging: example/doc_root/pillars/01-base/zdump.yml\n2020-10-02T23:18:27.151267Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/common/locale.yml\n2020-10-02T23:18:27.151286Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/common/locale.yml\n2020-10-02T23:18:27.151392Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/common/locale.yml\n2020-10-02T23:18:27.151426Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/common/locale.yml\n2020-10-02T23:18:27.151452Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/common/timezone.yml\n2020-10-02T23:18:27.151462Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/common/timezone.yml\n2020-10-02T23:18:27.151572Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/common/timezone.yml\n2020-10-02T23:18:27.151597Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/common/timezone.yml\n2020-10-02T23:18:27.151619Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/common/users.yml\n2020-10-02T23:18:27.151627Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/common/users.yml\n2020-10-02T23:18:27.151795Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/common/users.yml\n2020-10-02T23:18:27.151858Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/common/users.yml\n2020-10-02T23:18:27.151879Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/client/salt.yml\n2020-10-02T23:18:27.151887Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/client/salt.yml\n2020-10-02T23:18:27.152009Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/client/salt.yml\n2020-10-02T23:18:27.152039Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/client/salt.yml\n2020-10-02T23:18:27.152060Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/server/openssh.yml\n2020-10-02T23:18:27.152069Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/server/openssh.yml\n2020-10-02T23:18:27.152231Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/server/openssh.yml\n2020-10-02T23:18:27.152331Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/server/openssh.yml\n2020-10-02T23:18:27.152351Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/server/docker.yml\n2020-10-02T23:18:27.152360Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/server/docker.yml\n2020-10-02T23:18:27.152478Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/server/docker.yml\n2020-10-02T23:18:27.152528Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/server/docker.yml\n2020-10-02T23:18:27.152547Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/server/nodejs.yml\n2020-10-02T23:18:27.152554Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/server/nodejs.yml\n2020-10-02T23:18:27.152688Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/server/nodejs.yml\n2020-10-02T23:18:27.152729Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/server/nodejs.yml\n2020-10-02T23:18:27.152748Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/server/php.yml\n2020-10-02T23:18:27.152756Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/server/php.yml\n2020-10-02T23:18:27.152931Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/server/php.yml\n2020-10-02T23:18:27.153030Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/server/php.yml\n2020-10-02T23:18:27.153050Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/server/redis.yml\n2020-10-02T23:18:27.153059Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/server/redis.yml\n2020-10-02T23:18:27.153534Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/server/redis.yml\n2020-10-02T23:18:27.153604Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/server/redis.yml\n2020-10-02T23:18:27.153631Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/custom/php-app-server-common.yml\n2020-10-02T23:18:27.153639Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/custom/php-app-server-common.yml\n2020-10-02T23:18:27.153759Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/custom/php-app-server-common.yml\n2020-10-02T23:18:27.153835Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/custom/php-app-server-common.yml\n2020-10-02T23:18:27.153856Z  DEBUG - processor: Loading: example/doc_root/pillars/02-roles/custom/php-app-server-development.yml\n2020-10-02T23:18:27.153864Z  DEBUG - processor: Compiling: example/doc_root/pillars/02-roles/custom/php-app-server-development.yml\n2020-10-02T23:18:27.154676Z  DEBUG - renderer: Compiled: example/doc_root/pillars/02-roles/custom/php-app-server-development.yml\n2020-10-02T23:18:27.154824Z  DEBUG - processor: Merging: example/doc_root/pillars/02-roles/custom/php-app-server-development.yml\n2020-10-02T23:18:27.154931Z  DEBUG - renderer: Compiled: example/doc_root/server-pillars/stack2.cfg\n2020-10-02T23:18:27.154970Z  DEBUG - processor: Loading: example/doc_root/server-pillars/server2.example.net/clean.yml\n2020-10-02T23:18:27.154978Z  DEBUG - processor: Compiling: example/doc_root/server-pillars/server2.example.net/clean.yml\n2020-10-02T23:18:27.155054Z  DEBUG - renderer: Compiled: example/doc_root/server-pillars/server2.example.net/clean.yml\n2020-10-02T23:18:27.155076Z  DEBUG - processor: Merging: example/doc_root/server-pillars/server2.example.net/clean.yml\n2020-10-02T23:18:27.155086Z  DEBUG - processor: Loading: example/doc_root/server-pillars/server2.example.net/stacker.yml\n2020-10-02T23:18:27.155090Z  DEBUG - processor: Compiling: example/doc_root/server-pillars/server2.example.net/stacker.yml\n2020-10-02T23:18:27.155162Z  DEBUG - renderer: Compiled: example/doc_root/server-pillars/server2.example.net/stacker.yml\n2020-10-02T23:18:27.155181Z  DEBUG - processor: Merging: example/doc_root/server-pillars/server2.example.net/stacker.yml\n2020-10-02T23:18:27.155191Z  DEBUG - processor: Loading: example/doc_root/server-pillars/server2.example.net/users.yml\n2020-10-02T23:18:27.155195Z  DEBUG - processor: Compiling: example/doc_root/server-pillars/server2.example.net/users.yml\n2020-10-02T23:18:27.155451Z  DEBUG - renderer: Compiled: example/doc_root/server-pillars/server2.example.net/users.yml\n2020-10-02T23:18:27.155475Z  DEBUG - processor: Merging: example/doc_root/server-pillars/server2.example.net/users.yml\n2020-10-02T23:18:27.155486Z  DEBUG - processor: Loading: example/doc_root/server-pillars/server2.example.net/zdump.yml\n2020-10-02T23:18:27.155490Z  DEBUG - processor: Compiling: example/doc_root/server-pillars/server2.example.net/zdump.yml\n2020-10-02T23:18:27.155896Z  DEBUG - renderer: Compiled: example/doc_root/server-pillars/server2.example.net/zdump.yml\n2020-10-02T23:18:27.156648Z  DEBUG - processor: Merging: example/doc_root/server-pillars/server2.example.net/zdump.yml\n2020-10-02T23:18:27.156664Z   INFO - processor: End of stack build for: server2.example.net (namespace: prod)\n```\n</details>\n\n* filter logs by template path\n\nSet the file path to debug by using optional `p=` query parameter :\n\n```sh\ncurl http://127.0.0.1:3000/server1.example.net?l=trace&p=doc_root/pillars/02-roles/server/openssh.yml\n```\n\nOr with `--path` flag when using Stacker CLI.\n\n* filter logs by steps\n\nSet the step to debug by using optional `s=` query parameter :\n\n```sh\ncurl http://127.0.0.1:3000/server1.example.net?l=trace&p=doc_root/pillars/02-roles/server/openssh.yml&s=compile,yaml-load\n```\n\nOr with `--step` flag when using Stacker CLI.\n\nValid options for the `step` param are : `compile` | `yaml-load` | `before-merge` | `after-merge` | `final`\n\n## Scaling\n\nThe Stacker's web design leads to great possibilities :\n\n* You can move Stacker and the pillar rendering process out of Salt server :\n\n```yml\next_pillar:\n  - stacker: http://stacker.example.corp:3000\n```\n\n* You can run multiple instances of Stacker and call them sequentially :\n\n```yml\next_pillar:\n  - stacker: http://127.0.0.1:3000?n=foo\n  - stacker: http://127.0.0.1:4000?n=bar\n  - stacker: http://127.0.0.1:5000?n=baz\n```\n\nWith each instance having it's own stack configuration :)\n\n## Deployment\n\nYou can use the [provided systemd unit](https://github.com/jbox-web/stacker/blob/master/extra/stacker.service) to manage the Stacker daemon.\n\n## Merging strategies\n\nStacker implements [merging strategies](https://docs.saltstack.com/en/master/ref/pillar/all/salt.pillar.stack.html#merging-strategies) like PillarStack so you can use them in Stacker too :)\n\nIt works the same way and it's [tested](/spec/stacker/utils_spec.cr).\n\n## Template syntax\n\nThe [template syntax](https://github.com/straight-shoota/crinja/blob/master/TEMPLATE_SYNTAX.md) is almost the same than Jinja2.\n\n[Like PillarStack](https://docs.saltstack.com/en/master/ref/pillar/all/salt.pillar.stack.html#overall-process) you have access to these variables :\n\n* `stack`\n* `pillar`\n* `minion_id`\n* `grains` (instead of `__grains__`)\n\nStacker adds a bunch of filters and functions :\n\nFilters :\n\n* json filter (dump json without character escaping) (like the [Salt one](https://docs.saltstack.com/en/latest/topics/jinja/index.html#tojson))\n* traverse filter (like the [Salt one](https://docs.saltstack.com/en/latest/topics/jinja/index.html#traverse))\n* unique filter (like the [Salt one](https://docs.saltstack.com/en/latest/topics/jinja/index.html#unique))\n\nFunctions :\n\n* log function (like the [Salt one](https://docs.saltstack.com/en/latest/topics/jinja/index.html#logs))\n* dump function (it dumps objects to YAML in log file)\n* array_push function\n* merge_dict function\n\nYou can see examples of code in the [documentation](https://jbox-web.github.io/stacker/Stacker/Runtime/Filter.html).\n\nThe following filters/tests/functions/tags/operators are supported :\n\n```\nfilters:\n  abs()\n  append(string=)\n  attr(name=)\n  batch(linecount=2, fill_with=none)\n  capitalize()\n  center(width=80)\n  date(format=)\n  default(default_value='', boolean=false)\n  dictsort(case_sensitive=false, by='key')\n  escape()\n  filesizeformat(binary=false)\n  first()\n  float(default=0.0)\n  forceescape()\n  format()\n  groupby(attribute=)\n  indent(width=4, indentfirst=false)\n  int(default=0, base=10)\n  join(separator='', attribute=none)\n  json(indent=none)\n  last()\n  length()\n  list()\n  lower()\n  map()\n  pprint(verbose=false)\n  prepend(string=)\n  random()\n  reject()\n  rejectattr()\n  replace(old=, new=, count=none)\n  reverse()\n  round(precision=0, method='common', base=10)\n  safe()\n  select()\n  selectattr()\n  slice(slices=2, fill_with=none)\n  sort(reverse=false, case_sensitive=false, attribute=none)\n  string()\n  striptags()\n  sum(attribute=none, start=0)\n  title()\n  tojson(indent=none)\n  traverse(attribute=none, default=none)\n  trim()\n  truncate(length=255, killwords=false, end='...', leeway=none)\n  unique()\n  upper()\n  urlencode()\n  urlize(trim_url_limit=none, nofollow=false, target=none, rel=none)\n  wordcount()\n  wordwrap(width=79, break_long_words=true, wrapstring=none)\n  xmlattr(autoescape=true)\n\ntests:\n  callable()\n  defined()\n  divisibleby(num=)\n  equalto(other=)\n  escaped()\n  even()\n  greaterthan(other=0)\n  in(seq=[])\n  iterable()\n  lessthan(other=0)\n  lower()\n  mapping()\n  nil()\n  none()\n  number()\n  odd()\n  sameas(other=)\n  sequence()\n  string()\n  undefined()\n  upper()\n\nfunctions:\n  array_push(array=[], item=none)\n  cycler()\n  debug()\n  dict()\n  dump(object=none)\n  joiner(sep=', ')\n  log(object=none)\n  merge_dict(hash=none, other=none)\n  range(start=0, stop=0, step=1)\n  super()\n\ntags:\n  autoescape~endautoescape\n  block~endblock\n  call~endcall\n  do\n  elif\n  else\n  endautoescape\n  endblock\n  endcall\n  endfilter\n  endfor\n  endif\n  endmacro\n  endraw\n  endset\n  endwith\n  extends\n  filter~endfilter\n  for~endfor\n  from\n  if~endif\n  import\n  include\n  macro~endmacro\n  raw~endraw\n  set~endset\n  with~endwith\n\noperators:\n  operator[!=]\n  operator[%]\n  operator[*]\n  operator[**]\n  operator[+]\n  operator[-]\n  operator[/]\n  operator[//]\n  operator[<]\n  operator[<=]\n  operator[==]\n  operator[>]\n  operator[>=]\n  operator[and]\n  operator[not]\n  operator[or]\n  operator[~]\n```\n\n## Extend Stacker\n\nIf you need to add filters (or functions) just drop a new class with a few lines of Crystal code in [/src/runtime](https://github.com/jbox-web/stacker/tree/master/src/runtime) and recompile Stacker with `make stacker` (dev mode) or `make stacker-release` (release mode).\n\nYour custom filters (or functions) should be available in Jinja templates. To be sure run `stacker info` and check the Crinja environment info.\n\nThen feel free to submit a PR if you think it will be useful for people.\n\n**Note:** `make stacker-static` only works on Alpine Linux because it's the only distribution where Crystal supports static linking.\n\n## Roadmap\n\n* implement [Select Stacker config through grains|pillar|opts matching](https://github.com/saltstack/salt/blob/a670b4ae72ec11f5485c216c54059e14223019b8/salt/pillar/stack.py#L77)\n* add documentation about \"Stacker - Sample Project\"\n","program":{"html_id":"stacker/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"stacker","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"stacker/Crinja","path":"Crinja.html","kind":"class","full_name":"Crinja","name":"Crinja","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Crinja/Resolver","kind":"module","full_name":"Crinja::Resolver","name":"Resolver"},{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"stacker/Crinja/Resolver","kind":"module","full_name":"Crinja::Resolver","name":"Resolver"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"This class represents the core component of the Crinja template engine.\n\nIt contains the *runtime environment* including configuration, global variables\nas well as loading and rendering templates.\n\nInstances of this class may be modified if they are not shared and if no template\nwas loaded so far. Modifications on environments after the first template was\nloaded will lead to surprising effects and undefined behavior.\n\nIt also contains macros to easily define custom template features such as filters, tests\nand functions.","summary":"<p>This class represents the core component of the Crinja template engine.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"stacker/Crinja/Value","path":"Crinja/Value.html","kind":"struct","full_name":"Crinja::Value","name":"Value","abstract":false,"superclass":{"html_id":"stacker/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"stacker/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"stacker/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"stacker/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"stacker/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"stacker/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"stacker/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"stacker/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"stacker/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Crinja","kind":"class","full_name":"Crinja","name":"Crinja"},"doc":"`Value` represents an object inside the Crinja runtime.\n\nIt wraps a Crystal value in `#raw` and defines methods to access\nproperties of the wrapped value while being agnostic about the\nactual type of the wrapped raw value.","summary":"<p><code><a href=\"../Crinja/Value.html\">Value</a></code> represents an object inside the Crinja runtime.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"stacker/Crystal","path":"Crystal.html","kind":"module","full_name":"Crystal","name":"Crystal","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"stacker/Crystal/Env","path":"Crystal/Env.html","kind":"struct","full_name":"Crystal::Env","name":"Env","abstract":false,"superclass":{"html_id":"stacker/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"stacker/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"stacker/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Crystal","kind":"module","full_name":"Crystal","name":"Crystal"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"stacker/Stacker","path":"Stacker.html","kind":"module","full_name":"Stacker","name":"Stacker","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"config-class-method","html_id":"config-class-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@config || (@@config = Config.from_yaml(\"\"))"}},{"id":"config=(config:Config)-class-method","html_id":"config=(config:Config)-class-method","name":"config=","doc":null,"summary":null,"abstract":false,"args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"Config"}],"args_string":"(config : Config)","source_link":null,"def":{"name":"config=","args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"Config"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@config = config"}},{"id":"log_file-class-method","html_id":"log_file-class-method","name":"log_file","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"log_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@log_file || (@@log_file = log_to_stdout? ? STDOUT : File.open(config.log_file, \"a\"))"}},{"id":"log_to_stdout?-class-method","html_id":"log_to_stdout?-class-method","name":"log_to_stdout?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"log_to_stdout?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"config.log_file.downcase == \"stdout\""}},{"id":"logger-class-method","html_id":"logger-class-method","name":"logger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logger || (@@logger = ::Log::IOBackend.new(log_file))"}},{"id":"reopen_log_file!-class-method","html_id":"reopen_log_file!-class-method","name":"reopen_log_file!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"reopen_log_file!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@log_file = nil\nsetup_log\n"}},{"id":"setup_log-class-method","html_id":"setup_log-class-method","name":"setup_log","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"setup_log","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Log.setup do |c|\n  c.bind(\"*\", :debug, logger)\nend"}},{"id":"setup_signals-class-method","html_id":"setup_signals-class-method","name":"setup_signals","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"setup_signals","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Signal::USR1.trap do\n  reopen_log_file!\nend\nSignal::TERM.trap do\n  Kemal.stop\n  log_file.close\nend\n"}},{"id":"version-class-method","html_id":"version-class-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"VERSION"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"stacker/Stacker/Context","path":"Stacker/Context.html","kind":"class","full_name":"Stacker::Context","name":"Context","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker","kind":"module","full_name":"Stacker","name":"Stacker"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(root_dir:String)-class-method","html_id":"new(root_dir:String)-class-method","name":"new","doc":"`Context` is a wrapper around `Crinja`.\n\nIt creates and setup a new `Crinja` environment to compile Jinja templates.\n\nFilters and functions defined under `src/runtime` will be\nautomaticaly loaded.","summary":"<p><code><a href=\"../Stacker/Context.html\">Context</a></code> is a wrapper around <code><a href=\"../Crinja.html\">Crinja</a></code>.</p>","abstract":false,"args":[{"name":"root_dir","doc":null,"default_value":"","external_name":"root_dir","restriction":"String"}],"args_string":"(root_dir : String)","source_link":null,"def":{"name":"new","args":[{"name":"root_dir","doc":null,"default_value":"","external_name":"root_dir","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(root_dir)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"env:Crinja-instance-method","html_id":"env:Crinja-instance-method","name":"env","doc":"Retrieve the `Crinja` runtime instance","summary":"<p>Retrieve the <code><a href=\"../Crinja.html\">Crinja</a></code> runtime instance</p>","abstract":false,"args":[],"args_string":" : Crinja","source_link":null,"def":{"name":"env","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@env"}},{"id":"root_dir:String-instance-method","html_id":"root_dir:String-instance-method","name":"root_dir","doc":"Retrieve the `Crinja` runtime root dir","summary":"<p>Retrieve the <code><a href=\"../Crinja.html\">Crinja</a></code> runtime root dir</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"root_dir","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root_dir"}}],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Logger","path":"Stacker/Logger.html","kind":"module","full_name":"Stacker::Logger","name":"Logger","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SEVERITY_MAP","name":"SEVERITY_MAP","value":"{\"trace\" => ::Log::Severity::Trace, \"debug\" => ::Log::Severity::Debug, \"info\" => ::Log::Severity::Info, \"warn\" => ::Log::Severity::Warn, \"error\" => ::Log::Severity::Error, \"fatal\" => ::Log::Severity::Fatal}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker","kind":"module","full_name":"Stacker","name":"Stacker"},"doc":null,"summary":null,"class_methods":[{"id":"with_log_level(level,&)-class-method","html_id":"with_log_level(level,&)-class-method","name":"with_log_level","doc":null,"summary":null,"abstract":false,"args":[{"name":"level","doc":null,"default_value":"","external_name":"level","restriction":""}],"args_string":"(level, &)","source_link":null,"def":{"name":"with_log_level","args":[{"name":"level","doc":null,"default_value":"","external_name":"level","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"new_level = SEVERITY_MAP[level]? || SEVERITY_MAP[\"info\"]\nold_level = Stacker::Processor::Log.level\nbegin\n  Stacker::Processor::Log.level = new_level\n  Stacker::Renderer::Log.level = new_level\n  result = yield\nensure\n  Stacker::Processor::Log.level = old_level\n  Stacker::Renderer::Log.level = old_level\nend\nresult\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Processor","path":"Stacker/Processor.html","kind":"class","full_name":"Stacker::Processor","name":"Processor","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(\"processor\", ::Log::Severity::Info)","doc":null,"summary":null},{"id":"VALID_STEPS","name":"VALID_STEPS","value":"[\"compile\", \"yaml-load\", \"before-merge\", \"after-merge\", \"final\"]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker","kind":"module","full_name":"Stacker","name":"Stacker"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(renderer:Renderer,stacks:Array(String))-class-method","html_id":"new(renderer:Renderer,stacks:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"renderer","doc":null,"default_value":"","external_name":"renderer","restriction":"Renderer"},{"name":"stacks","doc":null,"default_value":"","external_name":"stacks","restriction":"Array(String)"}],"args_string":"(renderer : Renderer, stacks : Array(String))","source_link":null,"def":{"name":"new","args":[{"name":"renderer","doc":null,"default_value":"","external_name":"renderer","restriction":"Renderer"},{"name":"stacks","doc":null,"default_value":"","external_name":"stacks","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(renderer, stacks)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"run(host_name,grains,pillar,namespace,path,steps)-instance-method","html_id":"run(host_name,grains,pillar,namespace,path,steps)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"host_name","doc":null,"default_value":"","external_name":"host_name","restriction":""},{"name":"grains","doc":null,"default_value":"","external_name":"grains","restriction":""},{"name":"pillar","doc":null,"default_value":"","external_name":"pillar","restriction":""},{"name":"namespace","doc":null,"default_value":"","external_name":"namespace","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"steps","doc":null,"default_value":"","external_name":"steps","restriction":""}],"args_string":"(host_name, grains, pillar, namespace, path, steps)","source_link":null,"def":{"name":"run","args":[{"name":"host_name","doc":null,"default_value":"","external_name":"host_name","restriction":""},{"name":"grains","doc":null,"default_value":"","external_name":"grains","restriction":""},{"name":"pillar","doc":null,"default_value":"","external_name":"pillar","restriction":""},{"name":"namespace","doc":null,"default_value":"","external_name":"namespace","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"steps","doc":null,"default_value":"","external_name":"steps","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@host_name = host_name\n@grains = grains\n@pillar = pillar\n@namespace = namespace\n@path = path\n@steps = steps\nwith_debug_run do\n  build_stack\nend\n@stack\n"}}],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Renderer","path":"Stacker/Renderer.html","kind":"class","full_name":"Stacker::Renderer","name":"Renderer","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(\"renderer\", ::Log::Severity::Info)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker","kind":"module","full_name":"Stacker","name":"Stacker"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(context:Context,entrypoint:String)-class-method","html_id":"new(context:Context,entrypoint:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Context"},{"name":"entrypoint","doc":null,"default_value":"","external_name":"entrypoint","restriction":"String"}],"args_string":"(context : Context, entrypoint : String)","source_link":null,"def":{"name":"new","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"Context"},{"name":"entrypoint","doc":null,"default_value":"","external_name":"entrypoint","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(context, entrypoint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"compile(file,data)-instance-method","html_id":"compile(file,data)-instance-method","name":"compile","doc":null,"summary":null,"abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""}],"args_string":"(file, data)","source_link":null,"def":{"name":"compile","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"input = File.read(file)\nbegin\n  template = @context.env.from_string(input)\n  output = template.render(data)\nrescue e : Exception\n  Log.error do\n    \"Error while compiling template #{file}\"\n  end\n  Log.error do\n    e.message\n  end\n  output = \"\"\nelse\n  Log.debug do\n    \"Compiled: #{file}\"\n  end\nend\noutput\n"}},{"id":"file_exist?(file)-instance-method","html_id":"file_exist?(file)-instance-method","name":"file_exist?","doc":null,"summary":null,"abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":""}],"args_string":"(file)","source_link":null,"def":{"name":"file_exist?","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"entrypoint = \"#{@context.root_dir}/#{@entrypoint}/#{file}.yml\"\nUtils.file_exists?(entrypoint)\n"}}],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Runner","path":"Stacker/Runner.html","kind":"module","full_name":"Stacker::Runner","name":"Runner","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Log","name":"Log","value":"::Log.for(\"runner\", ::Log::Severity::Info)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker","kind":"module","full_name":"Stacker","name":"Stacker"},"doc":null,"summary":null,"class_methods":[{"id":"process(host_name,namespace,grains,pillar,level,path,steps)-class-method","html_id":"process(host_name,namespace,grains,pillar,level,path,steps)-class-method","name":"process","doc":null,"summary":null,"abstract":false,"args":[{"name":"host_name","doc":null,"default_value":"","external_name":"host_name","restriction":""},{"name":"namespace","doc":null,"default_value":"","external_name":"namespace","restriction":""},{"name":"grains","doc":null,"default_value":"","external_name":"grains","restriction":""},{"name":"pillar","doc":null,"default_value":"","external_name":"pillar","restriction":""},{"name":"level","doc":null,"default_value":"","external_name":"level","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"steps","doc":null,"default_value":"","external_name":"steps","restriction":""}],"args_string":"(host_name, namespace, grains, pillar, level, path, steps)","source_link":null,"def":{"name":"process","args":[{"name":"host_name","doc":null,"default_value":"","external_name":"host_name","restriction":""},{"name":"namespace","doc":null,"default_value":"","external_name":"namespace","restriction":""},{"name":"grains","doc":null,"default_value":"","external_name":"grains","restriction":""},{"name":"pillar","doc":null,"default_value":"","external_name":"pillar","restriction":""},{"name":"level","doc":null,"default_value":"","external_name":"level","restriction":""},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"steps","doc":null,"default_value":"","external_name":"steps","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"stack = Stacker.config.stacks[namespace]?\nif stack.nil?\n  Log.info do\n    \"Namespace not found : #{namespace}\"\n  end\n  return {\"404\" => \"Stacker: namespace not found\"}\nend\nLogger.with_log_level(level) do\n  run(host_name, namespace, grains, pillar, stack, path, steps)\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Runtime","path":"Stacker/Runtime.html","kind":"module","full_name":"Stacker::Runtime","name":"Runtime","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker","kind":"module","full_name":"Stacker","name":"Stacker"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"stacker/Stacker/Runtime/Filter","path":"Stacker/Runtime/Filter.html","kind":"module","full_name":"Stacker::Runtime::Filter","name":"Filter","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker/Runtime","kind":"module","full_name":"Stacker::Runtime","name":"Runtime"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"stacker/Stacker/Runtime/Filter/Json","path":"Stacker/Runtime/Filter/Json.html","kind":"class","full_name":"Stacker::Runtime::Filter::Json","name":"Json","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker/Runtime/Filter","kind":"module","full_name":"Stacker::Runtime::Filter","name":"Filter"},"doc":"```\n{% set json = {\"foo\": \"bar\"} | json %} # => {\"foo\": \"bar\"}\n```","summary":"<p><code></code>` {% set json = {\"foo\": \"bar\"} | json %} # => {\"foo\": \"bar\"} <code></code>`</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Runtime/Filter/Traverse","path":"Stacker/Runtime/Filter/Traverse.html","kind":"class","full_name":"Stacker::Runtime::Filter::Traverse","name":"Traverse","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker/Runtime/Filter","kind":"module","full_name":"Stacker::Runtime::Filter","name":"Filter"},"doc":"```\n{% set arrray  = { \"foo\": { \"bar\": [\"foo\", \"bar\"] } } | traverse(\"foo:bar\") %}     # => [\"foo\", \"bar\"]\n{% set default = { \"foo\": { \"bar\": [\"foo\", \"bar\"] } } | traverse(\"foo:foo\", {}) %} # => {}\n```","summary":"<p><code></code>` {% set arrray  = { \"foo\": { \"bar\": [\"foo\", \"bar\"] } } | traverse(\"foo:bar\") %}     # => [\"foo\", \"bar\"] {% set default = { \"foo\": { \"bar\": [\"foo\", \"bar\"] } } | traverse(\"foo:foo\", {}) %} # => {} <code></code>`</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Runtime/Filter/Unique","path":"Stacker/Runtime/Filter/Unique.html","kind":"class","full_name":"Stacker::Runtime::Filter::Unique","name":"Unique","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker/Runtime/Filter","kind":"module","full_name":"Stacker::Runtime::Filter","name":"Filter"},"doc":"```\n{% set foo = ['a', 'a', 'a'] | unique %} # => ['a']\n```","summary":"<p><code></code>` {% set foo = ['a', 'a', 'a'] | unique %} # => ['a'] <code></code>`</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"stacker/Stacker/Runtime/Function","path":"Stacker/Runtime/Function.html","kind":"module","full_name":"Stacker::Runtime::Function","name":"Function","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker/Runtime","kind":"module","full_name":"Stacker::Runtime","name":"Runtime"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"stacker/Stacker/Runtime/Function/ArrayPush","path":"Stacker/Runtime/Function/ArrayPush.html","kind":"class","full_name":"Stacker::Runtime::Function::ArrayPush","name":"ArrayPush","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker/Runtime/Function","kind":"module","full_name":"Stacker::Runtime::Function","name":"Function"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Runtime/Function/Dump","path":"Stacker/Runtime/Function/Dump.html","kind":"class","full_name":"Stacker::Runtime::Function::Dump","name":"Dump","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker/Runtime/Function","kind":"module","full_name":"Stacker::Runtime::Function","name":"Function"},"doc":"```\n{% do dump({\"foo\": \"bar\"}) %}\n```","summary":"<p><code></code>` {% do dump({\"foo\": \"bar\"}) %} <code></code>`</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Runtime/Function/Log","path":"Stacker/Runtime/Function/Log.html","kind":"class","full_name":"Stacker::Runtime::Function::Log","name":"Log","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker/Runtime/Function","kind":"module","full_name":"Stacker::Runtime::Function","name":"Function"},"doc":"```\n{% do log(\"a string\") %}\n```","summary":"<p><code></code>` {% do log(\"a string\") %} <code></code>`</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Runtime/Function/MergeDict","path":"Stacker/Runtime/Function/MergeDict.html","kind":"class","full_name":"Stacker::Runtime::Function::MergeDict","name":"MergeDict","abstract":false,"superclass":{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"stacker/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker/Runtime/Function","kind":"module","full_name":"Stacker::Runtime::Function","name":"Function"},"doc":"```\n{% set hash = {\"foo\": \"bar\"} %}\n{% do merge_dict(hash, {\"bar\": \"baz\"}) %} #=> {\"foo\": \"bar\", \"bar\": \"baz\"}\n```","summary":"<p><code></code>` {% set hash = {\"foo\": \"bar\"} %} {% do merge_dict(hash, {\"bar\": \"baz\"}) %} #=> {\"foo\": \"bar\", \"bar\": \"baz\"} <code></code>`</p>","class_methods":[{"id":"deep_merge_crinja!(hash,other_hash)-class-method","html_id":"deep_merge_crinja!(hash,other_hash)-class-method","name":"deep_merge_crinja!","doc":"Recursively merge two Crinja::Value object.\n\nIt merges **other_hash** in **hash** and returns the modified **hash**.","summary":"<p>Recursively merge two Crinja::Value object.</p>","abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""},{"name":"other_hash","doc":null,"default_value":"","external_name":"other_hash","restriction":""}],"args_string":"(hash, other_hash)","source_link":null,"def":{"name":"deep_merge_crinja!","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""},{"name":"other_hash","doc":null,"default_value":"","external_name":"other_hash","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hash = hash.raw\nother_hash = other_hash.raw\nif hash.is_a?(Hash) && other_hash.is_a?(Hash)\nelse\n  return\nend\nother_hash.each do |current_key, other_value|\n  this_value = hash[current_key.to_s]?\n  hash[Crinja::Value.new(current_key.to_s)] = if this_value.nil?\n    to_crinja_value(other_value)\n  else\n    if this_value.raw.is_a?(Hash) && other_value.raw.is_a?(Hash)\n      to_crinja_value(deep_merge_crinja!(this_value, other_value))\n    else\n      if this_value.raw.is_a?(Array) && other_value.raw.is_a?(Array)\n        to_crinja_value(this_value.concat(other_value))\n      else\n        to_crinja_value(other_value)\n      end\n    end\n  end\nend\nhash\n"}},{"id":"to_crinja_value(value)-class-method","html_id":"to_crinja_value(value)-class-method","name":"to_crinja_value","doc":"Convert any value in Crinja::Value.","summary":"<p>Convert any value in Crinja::Value.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":null,"def":{"name":"to_crinja_value","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value.is_a?(Crinja::Value)\n  return value\nend\nCrinja::Value.new(value)\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"stacker/Stacker/Utils","path":"Stacker/Utils.html","kind":"module","full_name":"Stacker::Utils","name":"Utils","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker","kind":"module","full_name":"Stacker","name":"Stacker"},"doc":null,"summary":null,"class_methods":[{"id":"crinja_info(env)-class-method","html_id":"crinja_info(env)-class-method","name":"crinja_info","doc":null,"summary":null,"abstract":false,"args":[{"name":"env","doc":null,"default_value":"","external_name":"env","restriction":""}],"args_string":"(env)","source_link":null,"def":{"name":"crinja_info","args":[{"name":"env","doc":null,"default_value":"","external_name":"env","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[env.filters, env.tests, env.functions, env.tags, env.operators].each do |library|\n  puts(\"#{library.name}s:\")\n  names = library.keys\n  names.sort.each do |name|\n    feature = library[name]\n    puts(\"  #{feature}\")\n  end\n  puts\nend"}},{"id":"file_exists?(file_path)-class-method","html_id":"file_exists?(file_path)-class-method","name":"file_exists?","doc":null,"summary":null,"abstract":false,"args":[{"name":"file_path","doc":null,"default_value":"","external_name":"file_path","restriction":""}],"args_string":"(file_path)","source_link":null,"def":{"name":"file_exists?","args":[{"name":"file_path","doc":null,"default_value":"","external_name":"file_path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"File.exists?(file_path)"}},{"id":"load_json_file(file)-class-method","html_id":"load_json_file(file)-class-method","name":"load_json_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":""}],"args_string":"(file)","source_link":null,"def":{"name":"load_json_file","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSON.parse(File.read(file))"}},{"id":"string_to_array(string)-class-method","html_id":"string_to_array(string)-class-method","name":"string_to_array","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"args_string":"(string)","source_link":null,"def":{"name":"string_to_array","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(string.split(\"\\n\")).reject(&.empty?)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"stacker/Stacker/Value","path":"Stacker/Value.html","kind":"struct","full_name":"Stacker::Value","name":"Value","abstract":false,"superclass":{"html_id":"stacker/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"stacker/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"stacker/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"stacker/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker","kind":"module","full_name":"Stacker","name":"Stacker"},"doc":"`Value` represents an object inside the Stacker runtime.\n\nIt wraps a Crystal value in #raw and defines methods to access properties of the wrapped value while being agnostic about the actual type of the wrapped raw value.","summary":"<p><code><a href=\"../Stacker/Value.html\">Value</a></code> represents an object inside the Stacker runtime.</p>","class_methods":[{"id":"convert_array(array:Array)-class-method","html_id":"convert_array(array:Array)-class-method","name":"convert_array","doc":"Convert an Array object into a Stacker::Value object.","summary":"<p>Convert an Array object into a Stacker::Value object.</p>","abstract":false,"args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array"}],"args_string":"(array : Array)","source_link":null,"def":{"name":"convert_array","args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"acc = [] of Type\narray.each do |val|\n  if val.responds_to?(:raw)\n    val = val.raw\n  end\n  if val.is_a?(Set) || val.is_a?(Slice)\n    next\n  end\n  acc << (if val.is_a?(Hash)\n    convert_hash(val)\n  else\n    if val.is_a?(Array)\n      convert_array(val)\n    else\n      val\n    end\n  end)\nend\nacc\n"}},{"id":"convert_hash(hash:Hash)-class-method","html_id":"convert_hash(hash:Hash)-class-method","name":"convert_hash","doc":"Convert a Hash object into a Stacker::Value object.","summary":"<p>Convert a Hash object into a Stacker::Value object.</p>","abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"Hash"}],"args_string":"(hash : Hash)","source_link":null,"def":{"name":"convert_hash","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s = new\nhash.each do |k, v|\n  if k.responds_to?(:raw)\n    k = k.raw\n  end\n  if v.responds_to?(:raw)\n    v = v.raw\n  end\n  if v.is_a?(Set) || v.is_a?(Slice)\n    next\n  end\n  if v.is_a?(Hash)\n    v = convert_hash(v)\n  else\n    if v.is_a?(Array)\n      v = convert_array(v)\n    end\n  end\n  s[k.to_s] = v\nend\ns\n"}},{"id":"deep_merge!(hash,other_hash)-class-method","html_id":"deep_merge!(hash,other_hash)-class-method","name":"deep_merge!","doc":"Recursively merge two Stacker::Value object.\n\nIt merges **other_hash** in **hash** and returns the modified **hash**.","summary":"<p>Recursively merge two Stacker::Value object.</p>","abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""},{"name":"other_hash","doc":null,"default_value":"","external_name":"other_hash","restriction":""}],"args_string":"(hash, other_hash)","source_link":null,"def":{"name":"deep_merge!","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""},{"name":"other_hash","doc":null,"default_value":"","external_name":"other_hash","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"strategy = (other_hash.delete(\"__\")) || \"merge-last\"\nif strategy == \"overwrite\"\n  return cleanup_hash!(other_hash)\nend\nother_hash.each do |current_key, other_value|\n  if strategy == \"remove\"\n    hash.delete(current_key)\n    next\n  end\n  this_value = hash[current_key]?\n  hash[current_key] = if this_value.is_a?(Stacker::Value) && other_value.is_a?(Stacker::Value)\n    if strategy == \"merge-first\"\n      deep_merge!(other_value, this_value)\n    else\n      deep_merge!(this_value, other_value)\n    end\n  else\n    if this_value.is_a?(Array) && other_value.is_a?(Array)\n      concat_list!(this_value, other_value)\n    else\n      other_value\n    end\n  end\nend\nhash\n"}},{"id":"yaml_to_pillar(yaml:String)-class-method","html_id":"yaml_to_pillar(yaml:String)-class-method","name":"yaml_to_pillar","doc":"Parse **yaml** and convert the result object into Stacker::Value object.","summary":"<p>Parse <strong>yaml</strong> and convert the result object into Stacker::Value object.</p>","abstract":false,"args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"String"}],"args_string":"(yaml : String)","source_link":null,"def":{"name":"yaml_to_pillar","args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"yaml = YAML.parse(yaml)\nif yaml.nil?\n  return nil\nend\nif yaml.raw.nil?\n  return nil\nend\nconvert_hash(yaml.as_h)\n"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](key:String)-instance-method","html_id":"[](key:String)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":null,"def":{"name":"[]","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@container[key]"}},{"id":"[]=(key:String,value)-instance-method","html_id":"[]=(key:String,value)-instance-method","name":"[]=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(key : String, value)","source_link":null,"def":{"name":"[]=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@container[key] = value"}},{"id":"[]?(key:String)-instance-method","html_id":"[]?(key:String)-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":null,"def":{"name":"[]?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@container[key]?"}},{"id":"delete(*args,**options)-instance-method","html_id":"delete(*args,**options)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"delete","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@container.delete(*args, **options)"}},{"id":"delete(*args,**options,&)-instance-method","html_id":"delete(*args,**options,&)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"delete","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@container.delete(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@container.each(*args, **options)"}},{"id":"each(*args,**options,&)-instance-method","html_id":"each(*args,**options,&)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@container.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"raw:Hash(String,Stacker::Value::Type)-instance-method","html_id":"raw:Hash(String,Stacker::Value::Type)-instance-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Stacker::Value::Type)","source_link":null,"def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@container"}},{"id":"to_json(*args,**options)-instance-method","html_id":"to_json(*args,**options)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"to_json","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@container.to_json(*args, **options)"}},{"id":"to_json(*args,**options,&)-instance-method","html_id":"to_json(*args,**options,&)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"to_json","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@container.to_json(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"to_yaml(*args,**options)-instance-method","html_id":"to_yaml(*args,**options)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"to_yaml","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@container.to_yaml(*args, **options)"}},{"id":"to_yaml(*args,**options,&)-instance-method","html_id":"to_yaml(*args,**options,&)-instance-method","name":"to_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"to_yaml","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@container.to_yaml(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[{"html_id":"stacker/Stacker/Value/Type","path":"Stacker/Value/Type.html","kind":"alias","full_name":"Stacker::Value::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"stacker","program":false,"enum":false,"alias":true,"aliased":"(Array(Stacker::Value::Type) | Bool | Float32 | Float64 | Int32 | Int64 | Stacker::Value | String | Time | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"stacker/Stacker/Value","kind":"struct","full_name":"Stacker::Value","name":"Value"},"doc":"Raw type wrapped by `Value`.","summary":"<p>Raw type wrapped by <code>Value</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}]}}